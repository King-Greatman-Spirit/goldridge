version: '3.9'

services:
  web:
    build:
      context: .
    volumes:
      - ./static:/static
      - .:/app
    expose:
      - 8000
    env_file:
      - .env-prod
    depends_on:
      - database
  database:
    image: postgres:13-alpine
    restart: always
    command: -p 5432
    env_file:
      - .env-prod
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./static:/static
      - ./media:/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
